name: build-images

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
    paths-ignore:
      - 'README.md'
  pull_request:
    branches:
      - 'master'

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./frontend/Dockerfile
            context: ./frontend
            image: australia-southeast1-docker.pkg.dev/instant-ml-372403/crmint/frontend
          - dockerfile: ./backend/controller.Dockerfile
            context: ./backend
            image: australia-southeast1-docker.pkg.dev/instant-ml-372403/crmint/controller
          - dockerfile: ./backend/jobs.Dockerfile
            context: ./backend
            image: australia-southeast1-docker.pkg.dev/instant-ml-372403/crmint/jobs
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - id: auth
        name: Authenticate to Google Cloud
        if: github.event_name != 'pull_request'
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.CLOUD_BUILD_RUNNER_SA }}
      - name: Login to Google Artifact Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: europe-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
